1.List out the features of HTML5.
Ans.HTML5 introduced several new features and improvement for developement.some of the features of HTML5 are:
(a)Semantic Elements: HTML5 introduced semantic elements like '<header>', '<nav>', '<article>', '<section>', '<footer>', and more,
 which provide a clearer structure and meaning to web documents.
(b)Audio and Video Support: HTML5 includes native support for embedding audio and video content using the '<audio>' and '<video>' elements,
 eliminating the need for third-party plugins like Flash.
(c)Canvas: The '<canvas>' element allows for dynamic rendering of 2D graphics and animations directly within the browser,
 making it possible to create games, data visualizations, and interactive content without the need for plugins.
(d)SVG Support: HTML5 has improved support for Scalable Vector Graphics (SVG),making it easier to integrate vector-based graphics
 into web applications.
(e)Geolocation API: HTML5 introduced the Geolocation API, which enables websites to access a user's geographical location,
 allowing for location-based services and content.
(f)Web Storage: HTML5 provides two client-side storage options: Local Storage and Session Storage. 
These allow web applications to store data locally on the user's device, reducing the need for repeated server requests.
(g)Web Workers: Web Workers enable multi-threading in web applications, allowing tasks to be executed in the background without blocking
 the main UI thread, which can lead to improved performance.
(h)Form Controls: HTML5 introduced new input types like <input type="email">, <input type="date">, <input type="number">,
 and more, along with the <datalist> element for providing a list of options for input fields.
(i)Improved Accessibility: HTML5 includes several accessibility features, such as the <figure>, <figcaption>, and <details> elements,
 as well as improved support for ARIA attributes, making it easier to create accessible web content.
(j)Improved Performance: HTML5 incorporates various features that improve web page loading and rendering performance,
 such as asynchronous script loading and defer attributes.

2.what are HTML entities ? list out 5 commonly used entities.
Ans.TML entities are special codes or sequences used to represent characters that have a special meaning or
may not be easily represented directly in HTML documents. These entities are used to ensure that such characters are displayed
correctly in web browsers. Here are five commonly used HTML entities:
(a)&lt; - Less Than Sign (<): This entity is used to represent the less-than symbol ("<") to avoid confusion with the HTML tag
 opening character. For example, &lt;p&gt; would be displayed as "<p>" in the browser.
(b)&gt; - Greater Than Sign (>): Similar to the less-than sign, this entity represents the greater-than symbol (">"). 
For example, &gt; would be displayed as ">" in the browser.
(c)&amp; - Ampersand (&): The ampersand entity is used to represent the ampersand character itself. 
This is necessary because the ampersand is a special character in HTML used to start entities. 
For example, &amp; would be displayed as "&" in the browser.
(d)&quot; - Double Quote ("): This entity represents the double quotation mark character ("). 
It is commonly used when you want to include double quotes within attribute values that are enclosed in double quotes.
 For example, &quot;Hello, World!&quot; would be displayed as "Hello, World!" in the browser.
(e)&copy; - Copyright Symbol (©): This entity represents the copyright symbol ©. It is often used to indicate copyright ownership.
 For example, &copy; 2023 MyCompany would be displayed as "© 2023 MyCompany" in the browser.

3.Define accesibility in the context of web development. Define why it's essential to create accessible
websites and how it benefits different user groups.
Ans.In the context of web development, accessibility (often referred to as web accessibility or digital accessibility) refers
to the practice of designing and developing websites and web applications in a way that ensures equal access and usability for
all individuals, including those with disabilities. It involves creating digital content that can be perceived, understood,
navigated, and interacted with by a wide range of people, regardless of their abilities, impairments, or assistive technologies.
Accessibility is essential in web development for several reasons, and it benefits various user groups in the following ways:
(a)Inclusivity: Web accessibility promotes inclusivity by ensuring that everyone, regardless of their abilities or disabilities,
can access and use digital content. This includes people with visual, auditory, cognitive, motor, and other impairments.
It extends inclusivity to a broad audience, enhancing user engagement and satisfaction.
(b)Legal Compliance: In many regions, there are laws and regulations (e.g., the Americans with Disabilities Act in the United States,
the Web Content Accessibility Guidelines, and the European Union's Web Accessibility Directive) that require websites and
web applications to meet certain accessibility standards. Non-compliance can result in legal consequences and fines.
(c)Expanded Audience: By making websites accessible, developers can reach a larger audience. People with disabilities,
estimated to be around 15% of the world's population, often rely on assistive technologies such as screen readers, braille displays,
and voice recognition software to access digital content. Accessible websites accommodate these technologies and,
consequently, a broader user base.
(d)Improved SEO: Many accessibility practices align with search engine optimization (SEO) best practices. For example,
providing descriptive alternative text for images benefits both users with disabilities and search engine crawlers.
This can result in improved search engine rankings and increased organic traffic.
(e)Enhanced Usability for All: Accessibility features, such as clear and semantic HTML structure, keyboard navigation,
and consistent design, benefit all users, not just those with disabilities. They contribute to a more user-friendly and 
consistent user experience.
(f)Mobile and Responsive Design: Accessible design principles often overlap with those of responsive design. 
This means that accessible websites are more likely to work well on a variety of devices, including smartphones and tablets,
benefiting users across different platforms.
(g)Social Responsibility: Creating accessible websites is a matter of social responsibility and ethical consideration.
It reflects a commitment to equal opportunities and a more inclusive digital environment.
(h)Future-Proofing: As technology evolves, new assistive technologies and devices will emerge. By building with accessibility in mind,
websites are more likely to remain usable and relevant in the face of technological advancements.

4.list any 3 ways which help us in improving the accesibility of HTML.
Ans.Improving the accessibility of HTML documents is essential to ensure that web content is usable by a wide range of individuals,
 including those with disabilities. Here are three key ways to enhance accessibility in HTML:
(a)Semantic HTML Elements: Use semantic HTML elements to provide a clear and meaningful structure to your content.
Semantic elements like <header>, <nav>, <main>, <article>, <section>, and <footer> help screen readers and other 
assistive technologies understand the content's organization. Properly nesting these elements and using them for their intended
 purposes improves the overall accessibility of your web pages.
(b)alternative Text for Images: Always include descriptive alternative text (alt text) for images using the alt attribute in the <img> element.
 Alt text provides a textual description of the image content, making it accessible to individuals who cannot see the images, 
 including those who use screen readers. Write concise, informative alt text that conveys the image's purpose or content.
(C)Keyboard Navigation and Focus: Ensure that all interactive elements and navigation can be accessed and operated using a keyboard.
 Test your website's keyboard navigation by pressing the Tab key to move through links, buttons, form fields, and
other interactive elements. Pay attention to the visual focus indicator (usually a highlighted outline) that shows where
the keyboard focus is. Use CSS to style and customize the focus indicator, but make sure it remains visible and clear.